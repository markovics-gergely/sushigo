version: '3.4'

services:
  apigateway.api:
    image: ${DOCKER_REGISTRY-}apigatewayapi
    build:
      context: .
      dockerfile: apigateway.api/Dockerfile
    depends_on:
        - lobby.api
        - user.api

  user.api:
    image: ${DOCKER_REGISTRY-}userapi
    build:
      context: .
      dockerfile: services/user.api/Dockerfile
    depends_on:
       sushisqlserver:
        condition: service_healthy

  lobby.api:
    image: ${DOCKER_REGISTRY-}lobbyapi
    build:
      context: .
      dockerfile: services/lobby.api/Dockerfile
    depends_on:
        - sushisqlserver

  shop.api:
    image: ${DOCKER_REGISTRY-}shopapi
    build:
      context: .
      dockerfile: services/shop.api/Dockerfile
    depends_on:
        - sushisqlserver

  game.api:
    image: ${DOCKER_REGISTRY-}shopapi
    build:
      context: .
      dockerfile: services/game.api/Dockerfile
    depends_on:
        - sushisqlserver

#  client:
#    image: ${DOCKER_REGISTRY-}client
#    build:
#      context: .
#      dockerfile: client/Dockerfile
#    ports:
#      - "4200:80"
#    volumes:
#      - 'clientdata:/usr/local/app/node_modules'

  sushisqlserver:
    container_name: sushisql
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: unless-stopped
    volumes:
      - mssqldata:/var/opt/mssql
    healthcheck:
        test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "SushiGo@@1234" -Q "SELECT 1" || exit 1
        interval: 20s
        timeout: 10s
        start_period: 20s
        retries: 5

  redis:
    container_name: sushicachemem
    image: 'bitnami/redis:latest'
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PORT_NUMBER=7000
      - ABORT_CONNECT=false
    ports:
      - "7000:7000"
    volumes:
      - 'redis_data:/bitnami/redis/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    container_name: sushirabbit
    image: rabbitmq:3-management
    hostname: rabbitmq
    tty: true
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 5

volumes:
  redis_data:
    driver: local
  mssqldata:
    driver: local
  clientdata:
    driver: local
