// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using shop.dal;

#nullable disable

namespace shop.dal.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20230415095603_path")]
    partial class path
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("shop.dal.Domain.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SushiType")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b73a059-b15a-4eb1-b88a-1275ba85d335"),
                            ImagePath = "/cards/EggNigiri.png",
                            SushiType = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("df9d0598-6c7b-47b5-82eb-e6ed459c6272"),
                            ImagePath = "/cards/SalmonNigiri.png",
                            SushiType = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("6656dc8f-1b2d-4fc2-8bbb-5d7d3cf7d5b2"),
                            ImagePath = "/cards/SquidNigiri.png",
                            SushiType = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("7580528f-3851-4ffd-b309-9f13d510392b"),
                            ImagePath = "/cards/MakiRoll.png",
                            SushiType = 3,
                            Type = 3
                        },
                        new
                        {
                            Id = new Guid("5e14949e-1ccf-47b2-8a86-888e52a0275c"),
                            ImagePath = "/cards/Temaki.png",
                            SushiType = 3,
                            Type = 4
                        },
                        new
                        {
                            Id = new Guid("b6e25b27-e3fa-41ca-9683-8b1ab99f4ea4"),
                            ImagePath = "/cards/Uramaki.png",
                            SushiType = 5,
                            Type = 5
                        },
                        new
                        {
                            Id = new Guid("b08938ca-b3d3-42b5-ae60-e27fdec1ad7b"),
                            ImagePath = "/cards/Dumpling.png",
                            SushiType = 5,
                            Type = 6
                        },
                        new
                        {
                            Id = new Guid("1d61c7ea-faf7-47e1-8fac-b67fe846af23"),
                            ImagePath = "/cards/Edamame.png",
                            SushiType = 5,
                            Type = 7
                        },
                        new
                        {
                            Id = new Guid("85d0c512-abe6-4c32-936f-8ca635375861"),
                            ImagePath = "/cards/Eel.png",
                            SushiType = 5,
                            Type = 8
                        },
                        new
                        {
                            Id = new Guid("9b51b684-6b00-49ab-b9b8-e9ef98aa2234"),
                            ImagePath = "/cards/Onigiri.png",
                            SushiType = 5,
                            Type = 9
                        },
                        new
                        {
                            Id = new Guid("b5aaa6fb-e8ab-492b-99d7-a8bb31a2e0d0"),
                            ImagePath = "/cards/MisoSoup.png",
                            SushiType = 5,
                            Type = 10
                        },
                        new
                        {
                            Id = new Guid("0ecc53be-db3f-434b-8750-f0f7b108e869"),
                            ImagePath = "/cards/Sashimi.png",
                            SushiType = 5,
                            Type = 11
                        },
                        new
                        {
                            Id = new Guid("f64687a8-a874-4b4e-8956-96fc84b13b82"),
                            ImagePath = "/cards/Tempura.png",
                            SushiType = 5,
                            Type = 12
                        },
                        new
                        {
                            Id = new Guid("259241c4-10cc-4279-b520-c0eff1d04d21"),
                            ImagePath = "/cards/Tofu.png",
                            SushiType = 13,
                            Type = 13
                        },
                        new
                        {
                            Id = new Guid("ca74570c-7675-4cd3-ad20-1aee3c4fcf80"),
                            ImagePath = "/cards/Chopsticks.png",
                            SushiType = 13,
                            Type = 14
                        },
                        new
                        {
                            Id = new Guid("38705911-6b40-4a9a-9413-0f04a0d995d5"),
                            ImagePath = "/cards/Menu.png",
                            SushiType = 13,
                            Type = 15
                        },
                        new
                        {
                            Id = new Guid("a7ce3912-4ea2-4793-b6c0-d098233ed925"),
                            ImagePath = "/cards/SoySauce.png",
                            SushiType = 13,
                            Type = 16
                        },
                        new
                        {
                            Id = new Guid("7ab7c652-ef5a-48e3-98ce-06b6a5bc8ef8"),
                            ImagePath = "/cards/Spoon.png",
                            SushiType = 13,
                            Type = 17
                        },
                        new
                        {
                            Id = new Guid("e9a85b71-5077-4723-930e-4664933584cf"),
                            ImagePath = "/cards/SpecialOrder.png",
                            SushiType = 13,
                            Type = 18
                        },
                        new
                        {
                            Id = new Guid("dda78d02-3b6b-4fef-9de8-0b20d20ba72a"),
                            ImagePath = "/cards/TakeoutBox.png",
                            SushiType = 13,
                            Type = 19
                        },
                        new
                        {
                            Id = new Guid("a73c066d-3837-4096-98b3-b7418bbd0023"),
                            ImagePath = "/cards/Tea.png",
                            SushiType = 13,
                            Type = 20
                        },
                        new
                        {
                            Id = new Guid("21b94c81-0278-4b6a-a066-ce5a5b195e4b"),
                            ImagePath = "/cards/Wasabi.png",
                            SushiType = 21,
                            Type = 21
                        },
                        new
                        {
                            Id = new Guid("b09141ed-73ea-429d-a55e-bdbf81367a52"),
                            ImagePath = "/cards/GreenTeaIceCream.png",
                            SushiType = 21,
                            Type = 22
                        },
                        new
                        {
                            Id = new Guid("000ed01f-8076-477a-b6c9-6b904fd1b72f"),
                            ImagePath = "/cards/Fruit.png",
                            SushiType = 21,
                            Type = 23
                        },
                        new
                        {
                            Id = new Guid("cd6c5a6e-3f5f-48bf-8b2e-272435b6760d"),
                            ImagePath = "/cards/Pudding.png",
                            SushiType = 24,
                            Type = 24
                        });
                });

            modelBuilder.Entity("shop.dal.Domain.Deck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Cost")
                        .HasColumnType("bigint");

                    b.Property<int>("DeckType")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Decks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9583ddba-7c9b-45d2-a921-8d394f98363f"),
                            Cost = 50L,
                            DeckType = 0,
                            ImagePath = "/decks/MyFirstMeal.png"
                        },
                        new
                        {
                            Id = new Guid("c8f2b614-5330-451e-a3e7-13ad7ebc98a0"),
                            Cost = 50L,
                            DeckType = 1,
                            ImagePath = "/decks/SushiGo.png"
                        },
                        new
                        {
                            Id = new Guid("7c74074d-ab6c-41a3-87b2-19078174423b"),
                            Cost = 50L,
                            DeckType = 2,
                            ImagePath = "/decks/PartySampler.png"
                        },
                        new
                        {
                            Id = new Guid("47998cfe-61b6-4bbf-9035-14d2aa0c5332"),
                            Cost = 50L,
                            DeckType = 3,
                            ImagePath = "/decks/MasterMenu.png"
                        },
                        new
                        {
                            Id = new Guid("70ba49e2-3d0c-4f84-a559-ef7c1dd3af6b"),
                            Cost = 50L,
                            DeckType = 4,
                            ImagePath = "/decks/PointsPlatter.png"
                        },
                        new
                        {
                            Id = new Guid("e4c9951f-f371-405b-9102-9a66fb62f96c"),
                            Cost = 50L,
                            DeckType = 5,
                            ImagePath = "/decks/CutThroatCombo.png"
                        },
                        new
                        {
                            Id = new Guid("0546c1d2-5b4d-4e51-940f-8a5e93d7dd79"),
                            Cost = 50L,
                            DeckType = 6,
                            ImagePath = "/decks/BigBanquet.png"
                        },
                        new
                        {
                            Id = new Guid("e265f7fa-a62f-4b32-888a-ed891f1b71b2"),
                            Cost = 50L,
                            DeckType = 7,
                            ImagePath = "/decks/DinnerForTwo.png"
                        });
                });

            modelBuilder.Entity("shop.dal.Domain.DeckCard", b =>
                {
                    b.Property<int>("DeckType")
                        .HasColumnType("int");

                    b.Property<int>("CardType")
                        .HasColumnType("int");

                    b.HasKey("DeckType", "CardType");

                    b.HasIndex("CardType");

                    b.ToTable("DeckCards");

                    b.HasData(
                        new
                        {
                            DeckType = 0,
                            CardType = 0
                        },
                        new
                        {
                            DeckType = 0,
                            CardType = 1
                        },
                        new
                        {
                            DeckType = 0,
                            CardType = 2
                        },
                        new
                        {
                            DeckType = 0,
                            CardType = 3
                        },
                        new
                        {
                            DeckType = 0,
                            CardType = 12
                        },
                        new
                        {
                            DeckType = 0,
                            CardType = 11
                        },
                        new
                        {
                            DeckType = 0,
                            CardType = 10
                        },
                        new
                        {
                            DeckType = 0,
                            CardType = 21
                        },
                        new
                        {
                            DeckType = 0,
                            CardType = 20
                        },
                        new
                        {
                            DeckType = 0,
                            CardType = 22
                        },
                        new
                        {
                            DeckType = 1,
                            CardType = 0
                        },
                        new
                        {
                            DeckType = 1,
                            CardType = 1
                        },
                        new
                        {
                            DeckType = 1,
                            CardType = 2
                        },
                        new
                        {
                            DeckType = 1,
                            CardType = 3
                        },
                        new
                        {
                            DeckType = 1,
                            CardType = 12
                        },
                        new
                        {
                            DeckType = 1,
                            CardType = 11
                        },
                        new
                        {
                            DeckType = 1,
                            CardType = 6
                        },
                        new
                        {
                            DeckType = 1,
                            CardType = 14
                        },
                        new
                        {
                            DeckType = 1,
                            CardType = 21
                        },
                        new
                        {
                            DeckType = 1,
                            CardType = 24
                        },
                        new
                        {
                            DeckType = 2,
                            CardType = 0
                        },
                        new
                        {
                            DeckType = 2,
                            CardType = 1
                        },
                        new
                        {
                            DeckType = 2,
                            CardType = 2
                        },
                        new
                        {
                            DeckType = 2,
                            CardType = 4
                        },
                        new
                        {
                            DeckType = 2,
                            CardType = 12
                        },
                        new
                        {
                            DeckType = 2,
                            CardType = 6
                        },
                        new
                        {
                            DeckType = 2,
                            CardType = 13
                        },
                        new
                        {
                            DeckType = 2,
                            CardType = 21
                        },
                        new
                        {
                            DeckType = 2,
                            CardType = 15
                        },
                        new
                        {
                            DeckType = 2,
                            CardType = 22
                        },
                        new
                        {
                            DeckType = 3,
                            CardType = 0
                        },
                        new
                        {
                            DeckType = 3,
                            CardType = 1
                        },
                        new
                        {
                            DeckType = 3,
                            CardType = 2
                        },
                        new
                        {
                            DeckType = 3,
                            CardType = 4
                        },
                        new
                        {
                            DeckType = 3,
                            CardType = 9
                        },
                        new
                        {
                            DeckType = 3,
                            CardType = 13
                        },
                        new
                        {
                            DeckType = 3,
                            CardType = 11
                        },
                        new
                        {
                            DeckType = 3,
                            CardType = 17
                        },
                        new
                        {
                            DeckType = 3,
                            CardType = 19
                        },
                        new
                        {
                            DeckType = 3,
                            CardType = 23
                        },
                        new
                        {
                            DeckType = 4,
                            CardType = 0
                        },
                        new
                        {
                            DeckType = 4,
                            CardType = 1
                        },
                        new
                        {
                            DeckType = 4,
                            CardType = 2
                        },
                        new
                        {
                            DeckType = 4,
                            CardType = 5
                        },
                        new
                        {
                            DeckType = 4,
                            CardType = 9
                        },
                        new
                        {
                            DeckType = 4,
                            CardType = 6
                        },
                        new
                        {
                            DeckType = 4,
                            CardType = 7
                        },
                        new
                        {
                            DeckType = 4,
                            CardType = 18
                        },
                        new
                        {
                            DeckType = 4,
                            CardType = 20
                        },
                        new
                        {
                            DeckType = 4,
                            CardType = 22
                        },
                        new
                        {
                            DeckType = 5,
                            CardType = 0
                        },
                        new
                        {
                            DeckType = 5,
                            CardType = 1
                        },
                        new
                        {
                            DeckType = 5,
                            CardType = 2
                        },
                        new
                        {
                            DeckType = 5,
                            CardType = 4
                        },
                        new
                        {
                            DeckType = 5,
                            CardType = 8
                        },
                        new
                        {
                            DeckType = 5,
                            CardType = 13
                        },
                        new
                        {
                            DeckType = 5,
                            CardType = 10
                        },
                        new
                        {
                            DeckType = 5,
                            CardType = 17
                        },
                        new
                        {
                            DeckType = 5,
                            CardType = 16
                        },
                        new
                        {
                            DeckType = 5,
                            CardType = 24
                        },
                        new
                        {
                            DeckType = 6,
                            CardType = 0
                        },
                        new
                        {
                            DeckType = 6,
                            CardType = 1
                        },
                        new
                        {
                            DeckType = 6,
                            CardType = 2
                        },
                        new
                        {
                            DeckType = 6,
                            CardType = 3
                        },
                        new
                        {
                            DeckType = 6,
                            CardType = 12
                        },
                        new
                        {
                            DeckType = 6,
                            CardType = 6
                        },
                        new
                        {
                            DeckType = 6,
                            CardType = 8
                        },
                        new
                        {
                            DeckType = 6,
                            CardType = 17
                        },
                        new
                        {
                            DeckType = 6,
                            CardType = 14
                        },
                        new
                        {
                            DeckType = 6,
                            CardType = 22
                        },
                        new
                        {
                            DeckType = 7,
                            CardType = 0
                        },
                        new
                        {
                            DeckType = 7,
                            CardType = 1
                        },
                        new
                        {
                            DeckType = 7,
                            CardType = 2
                        },
                        new
                        {
                            DeckType = 7,
                            CardType = 5
                        },
                        new
                        {
                            DeckType = 7,
                            CardType = 9
                        },
                        new
                        {
                            DeckType = 7,
                            CardType = 13
                        },
                        new
                        {
                            DeckType = 7,
                            CardType = 10
                        },
                        new
                        {
                            DeckType = 7,
                            CardType = 15
                        },
                        new
                        {
                            DeckType = 7,
                            CardType = 18
                        },
                        new
                        {
                            DeckType = 7,
                            CardType = 23
                        });
                });

            modelBuilder.Entity("shop.dal.Domain.DeckCard", b =>
                {
                    b.HasOne("shop.dal.Domain.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardType")
                        .HasPrincipalKey("Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("shop.dal.Domain.Deck", "Deck")
                        .WithMany("Cards")
                        .HasForeignKey("DeckType")
                        .HasPrincipalKey("DeckType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Deck");
                });

            modelBuilder.Entity("shop.dal.Domain.Deck", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
